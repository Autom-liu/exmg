<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.exmg.core.mapper.QuestionInfoExtMapper">
  <resultMap id="QuestionOptionMap" type="com.edu.exmg.core.vo.QuestionInfoVO">
    <id column="question_id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="question_type" jdbcType="INTEGER" property="questionType" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="top_category" jdbcType="INTEGER" property="topCategory" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="interpretation" jdbcType="VARCHAR" property="interpretation" />
    <result column="common" jdbcType="BIT" property="common" />
    <result column="pics_url" jdbcType="VARCHAR" property="picsUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <collection property="options" javaType="List" ofType="com.edu.exmg.core.bean.OptionInfo">
      <id column="option_id" jdbcType="INTEGER" property="id" />
      <result column="option" jdbcType="VARCHAR" property="option" />
      <result column="question_id" jdbcType="INTEGER" property="questionId" />
      <result column="option_type" jdbcType="INTEGER" property="optionType" />
      <result column="right" jdbcType="BIT" property="right" />
      <result column="option_interpretation" jdbcType="VARCHAR" property="interpretation" />
    </collection>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and qi.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and qi.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and qi.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and qi.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="questionUnionOptions" resultMap="QuestionOptionMap">
    select qi.`id`, `user_id`, `nick_name`, `question`, `question_type`, `difficulty`, `top_category`, `common` `category_id`, qi.`interpretation`, `pics_url`, qi.`create_time`, qi.`status`,
           oi.id option_id, `option`, `question_id`, `option_type`, `right`, oi.`interpretation` option_interpretation
    from question_info qi left join option_info oi on qi.id  = oi.question_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <resultMap id="ExamQuestionMap" type="com.edu.exmg.core.vo.ExamQuestionVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="sorted" jdbcType="INTEGER" property="sorted" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="question_type" jdbcType="INTEGER" property="questionType" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="top_category" jdbcType="INTEGER" property="topCategory" />
    <result column="common" jdbcType="BIT" property="common" />
  </resultMap>

  <resultMap id="QuestionOptionsMap" type="com.edu.exmg.core.vo.ExamQuestionVO">
    <id column="qid" jdbcType="INTEGER" property="questionId" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="question_type" jdbcType="INTEGER" property="questionType" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="top_category" jdbcType="INTEGER" property="topCategory" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="interpretation" jdbcType="INTEGER" property="interpretation" />
    <collection property="options" ofType="com.edu.exmg.core.bean.OptionInfo">
      <id property="id" column="oid"></id>
      <result property="option" column="option"></result>
      <result property="questionId" column="question_id"></result>
      <result property="optionType" column="option_type"></result>
      <result property="right" column="option_right"></result>
      <result property="status" column="user_right"></result>
    </collection>
  </resultMap>

  <select id="examUnionQuestion" resultMap="ExamQuestionMap">
    select eq.id, eq.question_id, score, sorted, qi.question, qi.question_type, qi.top_category, qi.category_id, qi.difficulty, qi.common
    from exam_question eq left join question_info qi on eq.question_id = qi.id
    <where>
      <if test="examId != null">
        AND eq.exam_id = #{examId}
      </if>
      <if test="userId != null and userId != ''">
        AND qi.user_id = #{userId}
      </if>
      <if test="common != null and common != ''">
        AND qi.common = #{common}
      </if>
    </where>
    ORDER BY sorted
  </select>

  <select id="questionUnionOption" resultMap="QuestionOptionsMap">
    select qi.id qid, qi.question, qi.question_type, qi.top_category, qi.category_id, oi.id oid, oi.`option`, oi.question_id, oi.option_type
    from question_info qi left join option_info oi on qi.id = oi.question_id
    <where>
      <foreach collection="questionIds" item="qid" separator="," open="qi.id in (" close=")">
        #{qid}
      </foreach>
    </where>
  </select>

  <select id="questionUnionUserOption" resultMap="QuestionOptionsMap">
    select qi.id qid, qi.question, qi.question_type, qi.top_category, qi.category_id, qi.interpretation, oi.id oid, oi.`option`, oi.question_id, oi.option_type, oi.`right` option_right, ua.`right` user_right
    from question_info qi left join option_info oi on qi.id = oi.question_id
    left join user_answer ua on oi.id = ua.option_id
    <where>
      <if test="userId != null and userId != ''">
        AND ua.user_id = #{userId}
      </if>
      <if test="examId != null and examId != ''">
        AND ua.exam_id = #{examId}
      </if>
      <foreach collection="questionIds" item="qid" separator="," open="AND qi.id in (" close=")">
        #{qid}
      </foreach>
    </where>
  </select>

  <select id="examQuestionIds" resultType="java.lang.Integer">
    select question_id from exam_question where exam_id = #{examId} ORDER BY sorted
  </select>

  <select id="questionInfoIds" resultType="java.lang.Integer">
    select id from question_info
    <where>
      <if test="topCategory != null">
        and top_category = #{topCategory}
      </if>
      <if test="common != null">
        and common = #{common}
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
    </where>
  </select>

  <select id="rightUserAnswerConverge" resultType="com.edu.exmg.core.vo.ConvergeAnswerVO">
    select question_id questionId, count(1) rightNum from user_answer where user_id = #{userId} and exam_id = #{examId} and `right` = 1 group by question_id
  </select>

  <select id="wrongUserAnswerConverge" resultType="com.edu.exmg.core.vo.ConvergeAnswerVO">
    select question_id questionId, count(1) wrongNum from user_answer where user_id = #{userId} and exam_id = #{examId} and `right` = 0 group by question_id
  </select>

  <select id="rightQuestionAnswerConverge" resultType="com.edu.exmg.core.vo.ConvergeAnswerVO">
    select question_id questionId, count(1) rightNum from option_info where question_id in (select question_id from exam_question where exam_id = #{examId}) and `right` = 1 group by question_id
  </select>

  <select id="countExamQuestion" resultType="int">
    select count(1) from exam_question where exam_id = #{examId}
  </select>

  <select id="convergeAnswerResult" resultType="com.edu.exmg.core.vo.ConvergeAnswerVO">
    select question_id, count(option_id) rightNum, sum(`right`) totalNum from user_answer where user_id = #{userId} and exam_id = #{examId} group by question_id
  </select>


</mapper>